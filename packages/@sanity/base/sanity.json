{
  "paths": {
    "source": "./src",
    "compiled": "./lib"
  },
  "parts": [
    {
      "name": "part:@sanity/base/document",
      "description": "The document component wrapping the root component. Statically built for production, Rendered dynamically on the server in development."
    },
    {
      "name": "part:@sanity/base/sanity-root",
      "description": "The very root of any Sanity application. Used to load layout-agnostic behaviour"
    },
    {
      "name": "part:@sanity/base/root",
      "description": "The root component in the DOM-tree. Usually a layout."
    },
    {
      "name": "part:@sanity/base/absolutes",
      "description": "Statically positioned elements that should live on the page regardless of routing."
    },
    {
      "name": "part:@sanity/base/tool",
      "description": "Tools available for use within a Sanity configuration"
    },
    {
      "name": "part:@sanity/base/schema-creator",
      "description": "Function that creates a schema, merging the default Sanity types with user-specific types"
    },
    {
      "name": "part:@sanity/base/preview-resolver",
      "description": "Function that resolves a preview component for a given type"
    },
    {
      "name": "part:@sanity/base/diff-resolver",
      "description": "Function that resolves a diff component for a given type"
    },
    {
      "name": "part:@sanity/base/configure-client",
      "description": "Function that configures the default sanity client"
    },
    {
      "implements": "part:@sanity/base/version-checker",
      "path": "components/VersionChecker"
    },
    {
      "name": "part:@sanity/base/asset-url-builder-default",
      "implements": "part:@sanity/base/asset-url-builder",
      "description": "Function that generates or modifies asset URLs for display in various contexts",
      "path": "assets/asset-url-builder"
    },
    {
      "name": "part:@sanity/base/search",
      "description": "Parse the search query and fetch search results from the dataset"
    },
    {
      "name": "part:@sanity/base/search/weighted",
      "description": "Weighted search implementation"
    },

    {
      "name": "part:@sanity/base/locale-messages",
      "description": "Messages across all known locales"
    },
    {
      "implements": "part:@sanity/base/util/document-action-utils",
      "path": "actions/utils/legacy_documentActionUtils"
    },
    {
      "implements": "part:@sanity/base/actions/utils",
      "path": "actions/utils/index"
    },
    {
      "name": "part:@sanity/base/document-actions/resolver",
      "description": "A function that resolves current available actions for a document."
    },
    {
      "name": "part:@sanity/base/document-actions",
      "description": "The default document actions"
    },
    {
      "name": "part:@sanity/base/document-badges/resolver",
      "description": "A function that resolves current available badges for a document."
    },
    {
      "name": "part:@sanity/base/document-badges",
      "description": "The default document badges"
    },
    {
      "name": "part:@sanity/base/language-resolver",
      "description": "Figures out which locale the client should use"
    },
    {
      "name": "part:@sanity/base/locale-message-fetcher",
      "description": "Fetches locale messages for the given locale"
    },
    {
      "name": "part:@sanity/base/locale/intl",
      "description": "Exposes the current ReactIntl module instance"
    },
    {
      "name": "part:@sanity/base/locale/formatters",
      "description": "Functions to format based on resolved locale"
    },
    {
      "name": "part:@sanity/base/login-wrapper",
      "description": "Checks if user is logged in or not, and displays login screen or content for logged in users."
    },
    {
      "name": "part:@sanity/base/login-dialog",
      "description": "Lets the user log in to Sanity."
    },
    {
      "name": "part:@sanity/base/authentication-fetcher",
      "description": "Fetches the logged in user and JSON web token."
    },
    {
      "name": "part:@sanity/base/sanity-intl-provider",
      "description": "Wraps the ReactIntl.IntlProvider component with the resolved locale and messages"
    },
    {
      "name": "part:@sanity/base/query-container",
      "description": "Wraps a query and passes down results as props to its child component"
    },
    {
      "name": "part:@sanity/base/with-referring-documents",
      "description": "A utility component that takes a document id and calls its child render prop with a list of documents referring to it"
    },
    {
      "name": "part:@sanity/base/app-loading-screen",
      "description": "Loading screen when sanity is initializing. Only static html and css. No javascript."
    },
    {
      "name": "part:@sanity/base/schema-type",
      "description": "Schema types provided by plugins, for easy usage in studio schemas"
    },
    {
      "name": "part:@sanity/components/layer-stack",
      "description": "Keep control over stacking layers in portals"
    },
    {
      "implements": "part:@sanity/base/sanity-root",
      "path": "components/SanityRoot"
    },
    {
      "implements": "part:@sanity/base/app-loading-screen",
      "path": "components/AppLoadingScreen"
    },
    {
      "implements": "part:@sanity/base/root",
      "path": "components/DefaultRootComponent"
    },
    {
      "implements": "part:@sanity/base/schema-creator",
      "path": "schema/createSchema"
    },
    {
      "implements": "part:@sanity/base/search",
      "path": "search/index"
    },
    {
      "implements": "part:@sanity/base/search/weighted",
      "path": "search/weighted/index"
    },
    {
      "implements": "part:@sanity/base/util/draft-utils",
      "path": "util/draftUtils"
    },
    {
      "implements": "part:@sanity/base/util/search-utils",
      "path": "util/searchUtils"
    },
    {
      "name": "part:@sanity/base/location",
      "path": "datastores/location"
    },
    {
      "name": "part:@sanity/base/datastore/document",
      "path": "datastores/document"
    },
    {
      "name": "part:@sanity/base/datastore/history",
      "path": "datastores/history"
    },
    {
      "name": "part:@sanity/base/datastore/presence",
      "path": "datastores/presence"
    },
    {
      "name": "part:@sanity/base/user",
      "path": "datastores/user"
    },
    {
      "name": "part:@sanity/base/project",
      "path": "datastores/project"
    },
    {
      "name": "part:@sanity/base/settings",
      "path": "datastores/settings/settingsStore"
    },
    {
      "name": "part:@sanity/base/router",
      "path": "router"
    },
    {
      "implements": "part:@sanity/base/client",
      "path": "client"
    },
    {
      "name": "part:@sanity/base/document-default",
      "implements": "part:@sanity/base/document",
      "path": "components/Document"
    },
    {
      "implements": "part:@sanity/base/language-resolver",
      "path": "locale/languageResolver"
    },
    {
      "implements": "part:@sanity/base/locale-message-fetcher",
      "path": "locale/messageFetcher"
    },
    {
      "implements": "part:@sanity/base/locale/intl",
      "path": "locale/intl"
    },
    {
      "implements": "part:@sanity/base/sanity-intl-provider",
      "path": "components/SanityIntlProvider"
    },
    {
      "implements": "part:@sanity/base/query-container",
      "path": "components/QueryContainer"
    },
    {
      "implements": "part:@sanity/base/with-referring-documents",
      "path": "components/WithReferringDocuments"
    },
    {
      "implements": "part:@sanity/base/locale/formatters",
      "path": "components/IntlWrapper"
    },
    {
      "name": "part:@sanity/base/brand-logo",
      "description": "Logo for the branding"
    },
    {
      "implements": "part:@sanity/base/preview",
      "path": "preview/index"
    },
    {
      "name": "part:@sanity/base/component",
      "description": "React Storybook (https://github.com/kadirahq/react-storybook) stories"
    },
    {
      "implements": "part:@sanity/base/component",
      "path": "components/story"
    }
  ]
}
