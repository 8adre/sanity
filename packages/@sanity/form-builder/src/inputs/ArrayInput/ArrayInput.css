@import 'part:@sanity/base/theme/variables-style';

.root {
  display: block;
  position: relative;
}

.list {
  /* overide default list */
  @nest .root & {
    user-select: none;
    /* display: grid; */
    /* grid-template-columns: minmax(0, 1fr); */
    /* grid-gap: var(--small-padding); */
    padding: 0 1px;
  }

  @nest &.moving {
    /* opacity: 0.5; */
  }

  @nest &.readOnly {
    opacity: 0.5;
  }
}

.grid {
  user-select: none;

  @nest &.moving {
    /* opacity: 0.5; */
  }

  @nest &.readOnly {
    opacity: 0.5;
  }
}

.functions {
  @nest .list + & {
    margin-top: var(--small-padding);
  }

  &:empty {
    display: none;
  }
}

.popupAnchor {
  position: absolute;
  top: 75%;
  left: 2em;
}

.listItem {
  padding-bottom: 0.5em;
  /* margin-bottom: 0.5em; */
}

.listItemWrapper {
  composes: shadow-1dp from 'part:@sanity/base/theme/shadows-style';
  border-radius: var(--border-radius-small);
  padding: var(--extra-small-padding);
  transition: box-shadow 100ms;
}

.gridItemWrapper {
}

/* .movingListItem {
  composes: movingItem from 'part:@sanity/base/theme/layout/helpers';
} */

.gridItem {
  display: block;
}

.popupAnchorRelative {
  margin-left: calc(var(--medium-padding) * -1);
  margin-right: calc(var(--medium-padding) * -1);

  /* Hack for the draghandle */
  @nest &.sortable {
    margin-left: calc(var(--medium-padding) * -1 - 2.5rem);
  }
}

.warning {
  composes: root from 'part:@sanity/components/fieldsets/default-style';
  padding: var(--medium-padding);
  border: 2px dashed var(--state-warning-color);
}

.missingKeysWarning {
  composes: warning;
  padding: 1em;
}

.fixMissingKeysButtonWrapper {
  margin: 1em 0;
}

.nonObjectsWarning {
  composes: warning;
  padding: 1em;
}

.removeNonObjectsButtonWrapper {
  composes: fixMissingKeysButtonWrapper;
}
